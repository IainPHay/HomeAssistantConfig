#
### Get state of all Tasmota on startup
#
- alias: 'Power state on HA start-up'
  #
  trigger:
    platform: homeassistant
    event: start
  action:
    - service: mqtt.publish
      data:
        topic: "cmnd/tasmota/state"
        payload: ""
#        
### Christmas Switch on
#
# Switch on lights at sunset
- alias: 'Christmas on'
  trigger:
    platform: sun
    event: sunset
  action:
    - service: switch.turn_on
      entity_id: switch.christmashouse
      
      
#Switch on outside christmas tree lights at sunset
- alias: 'Outside Christmas Tree Lights'
  trigger:
    platform: sun
    event: sunset
  action:
    - service: switch.turn_on
      entity_id: switch.christmastree
#Switch on Christmas Candles at sunset
- alias: 'Christmas Candles'
  trigger:
    platform: sun
    event: sunset
  action:
    - service: switch.turn_on
      entity_id: switch.christmascandles
      
#Switch on outside christmas house at sunset
#- alias: 'Outside Christmas House Lights On'
#  #
#  trigger:
#    platform: sun
#    event: sunset
#  action:
#    - service: switch.turn_on
#      entity_id: switch.ChristmasHouse
    
#Switch off outside christmas house at midnight
- alias: 'Outside Christmas House Lights Off'
  trigger:
    platform: time
    # Military time format. This trigger will fire at 11.59 PM
    at: "23:59:59"
  action:
    - service: switch.turn_off
      entity_id: switch.christmashouse
#
### turn Bathroom Tradfri lights on when door closed active 1 hour before sunset or raining
#
- alias: 'Bathroom Light on'
  trigger:
    platform: state
    entity_id: binary_sensor.bathroom_door
    from: 'on'
    to: 'off'
  condition:
    condition: or
    conditions:
      - condition: sun
        after: 'sunset'
        after_offset: "-1:00:00"
      - condition: state
        entity_id: sensor.dark_sky_precip
        state: 'rain'
  action:
    service: light.turn_on
    entity_id: group.bathroom

- alias: 'Bathroom Light off'
  trigger:
    platform: state
    entity_id: binary_sensor.bathroom_door
    from: 'off'
    to: 'on'
  condition:
    condition: or
    conditions:
      - condition: sun
        after: 'sunset'
        after_offset: "-1:00:00"
      - condition: state
        entity_id: sensor.dark_sky_precip
        state: 'rain'
  action:
    service: light.turn_off
    entity_id: group.bathroom         
#
### turn Hall light sonoff on when door opened active from 1 hour before sunset or raining
#
- alias: 'Hall Light on'
  #
  trigger:
    - platform: state
      entity_id: sensor.heiman_door_sensor_hs1dsz_access_control_3
      from: '23'
      to: '22'
  condition:
    condition: or
    conditions:
      - condition: sun
        after: 'sunset'
        after_offset: "-1:00:00"
      - condition: state
        entity_id: sensor.dark_sky_precip
        state: 'rain'
  action:
    - service: light.turn_on
      entity_id: light.hall
      
### turn Hall light sonoff off when door has been shut for a total of 5 minutes
- alias: 'Hall Light off'
  #
  trigger:
    - platform: state
      entity_id: sensor.heiman_door_sensor_hs1dsz_access_control_3
      from: '22'
      to: '23'
      for:
        minutes: 5
  action:
    - service: light.turn_off
      entity_id: light.hall
#
### Loft Lights
#
# Loft light on when loft hatch opens triggering zwave sensor
- alias: 'Loft Light on'
  #
  trigger:
    - platform: state
      entity_id: sensor.heiman_door_sensor_hs1dsz_access_control_2
      from: '23'
      to: '22'
  action:
    - service: light.turn_on
      entity_id: light.loft
# Loft light off when loft hatch closes triggering zwave sensor   
- alias: 'Loft Light off'
  #
  trigger:
    - platform: state
      entity_id: sensor.heiman_door_sensor_hs1dsz_access_control_2
      from: '22'
      to: '23'
  action:
    - service: light.turn_off
      entity_id: light.loft
#
### Garage Strip Light
#
# Garage Strip light on when garage internal door opens triggering zwave sensor
- alias: 'Garage on'
  #
  trigger:
    - platform: state
      entity_id: sensor.heiman_door_sensor_hs1dsz_access_control_4
      from: '23'
      to: '22'
  action:
    - service: light.turn_on
      entity_id: group.garage
# Garage strip light off when internal Garage door closes triggering zwave sensor   
- alias: 'Garage Off'
  #
  trigger:
    - platform: state
      entity_id: sensor.heiman_door_sensor_hs1dsz_access_control_4
      from: '22'
      to: '23'
  action:
    - service: light.turn_off
      entity_id: group.garage
#
### Kitchen undercupboard lights triggered by zwave pir sensor
#
#- alias: 'Kitchen Light off'
  #
#  trigger:
#    - platform: state
#      entity_id: sensor.kitchenpir_burglar
#      from: '8'
#      to: '0'
#      for:
#        minutes: 4
#  condition:
#    condition: and
#    conditions:
#      - condition: numeric_state
#        entity_id: sensor.shenzhen_neo_electronics_co_ltd_battery_powered_pir_sensor_v2_burglar_2
#        below: 4
#  action:
#    - service: light.turn_off
#      entity_id: group.kitchen
      
      #
### Kitchen undercupboard lights triggered by zwave pir sensor
#
#- alias: 'Kitchen Light off'
  #
#  trigger:
#    - platform: state
#      entity_id: sensor.shenzhen_neo_electronics_co_ltd_battery_powered_pir_sensor_v2_burglar_2
#      from: '8'
 #     to: '0'
#      for:
#        minutes: 2
#  condition:
#    condition: and
#    conditions:
#      - condition: numeric_state
#        entity_id: sensor.kitchenpir_burglar
#        below: 4
#  action:
#    - service: light.turn_off
#      entity_id: group.kitchen
      
### Kitchen undercupboard lights triggered by zwave pir sensor
#
- alias: 'Kitchen Light off2'
  #
  trigger:
    - platform: state
      entity_id: binary_sensor.sensor_5
      to: 'off'
      for:
        minutes: 5
#  condition:
#    condition: and
#    conditions:
#      - condition: numeric_state
#        entity_id: sensor.shenzhen_neo_electronics_co_ltd_battery_powered_pir_sensor_v2_burglar_2
#        below: 4
  action:
    - service: light.turn_off
      entity_id: group.kitchen
      
# Kitchen under cupboard lights on if zwave PIR triggered after sunset or raining or light below 150 lux


- alias: 'Kitchen Light on motion if PIR1 triggered 1 hr before sunset or raining, not active at night'
  #
  trigger:
    - platform: state
      entity_id: binary_sensor.sensor_5
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '07:00:00'
        before: '06:59:00'
      - condition: or
        conditions:
          - condition: sun
            after: 'sunset'
            after_offset: "-01:00:00"
          - condition: state
            entity_id: sensor.dark_sky_precip
            state: 'rain'
          - condition: numeric_state
            entity_id: sensor.orchid_light_intensity
            below: 280
  action:
    - service: light.turn_on
      entity_id: group.kitchen
      
- alias: 'Kitchen Light on motion if Second PIR trigger 1 hr before sunset or raining, not active at night'
  #
  trigger:
    - platform: state
      entity_id: binary_sensor.shenzhen_neo_electronics_co_ltd_battery_powered_pir_sensor_v2_sensor_2
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '07:00:00'
        before: '06:59:00'
      - condition: or
        conditions:
          - condition: sun
            after: 'sunset'
            after_offset: "-01:00:00"
          - condition: state
            entity_id: sensor.dark_sky_precip
            state: 'rain'
          - condition: numeric_state
            entity_id: sensor.orchid_light_intensity
            below: 280
  action:
    - service: light.turn_on
      entity_id: group.kitchen
      
# Kitchen Exraction on if humidity in hood above 60 during waking hours when
- alias: 'Extraction on cooker humidity, not active at night'
  #
  trigger:
    - platform: numeric_state
      entity_id: sensor.cooker_hood_humidity
      above: 60
      for:
        seconds: 5
  condition:
    condition: and
    conditions:
      - condition: time
        after: '09:00:00'
        before: '23:30:00'
  action:
    - service: switch.turn_on
      entity_id: switch.extraction
      
# Kitchen Exraction off if humidity in hood below 60 during waking hours when
- alias: 'Extraction on cooker humidity, not active at night'
  #
  trigger:
    - platform: numeric_state
      entity_id: sensor.cooker_hood_humidity
      below: 60
      for:
        seconds: 60
  condition:
    condition: and
    conditions:
      - condition: time
        after: '09:00:00'
        before: '23:30:00'
  action:
    - service: switch.turn_off
      entity_id: switch.extraction   
      
#
### Announce high humidity in bedroom
#
- alias: 'Bedroom Humidity'
  #
  trigger:
    - platform: numeric_state
      entity_id: sensor.bedroom_humidity
      above: 65
      for:
        minutes: 10
  condition:
    - condition: time
      after: '09:00:00'
      before: '23:00:00'
  action:
    - service: notify.alexa_media
      data:
        target:
          - media_player.kitchen
          - media_player.office_2
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        data:
          type: announce
        message: "Bedroom Humidity HIGH consider opening window"

#
### Announce high humidity downstairs
#
- alias: 'Downstairs Humidity'
  #
  trigger:
    - platform: numeric_state
      entity_id: sensor.downstairs_humidity
      above: 60
      for:
        minutes: 10
  condition:
    - condition: time
      after: '09:00:00'
      before: '23:00:00'
  action:
    - service: notify.alexa_media
      data:
        target:
          - media_player.kitchen
          - media_player.office_2
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        data:
          type: announce
        message: "Humidity in living room high consider opening window"      
  
### Notify when Lime tree needs water
#- alias: 'Lime needs water'
#  
#  trigger:
#    - platform: numeric_state
#      entity_id: sensor.lime_moisture
#      below: 40
#  action:
#    service: notify.ios_iosIH
#    data:
#      title: "Smart Home Alert"
#      message: "Moisture below 40"
#      data:
#        subtitle: "Water Kaffir Lime"

###Actions when Abbi leaves work
- alias: 'Abbi Leaves Work'
  trigger:
    - platform: state
      entity_id: device_tracker.iphone_2
      from: 'AbbiWork'
      #Optional
      #to: 'Away'
  condition:
    - condition: time
      after: '15:00:00'
      before: '19:00:00'
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
      
#  action:
#    - service: notify.ios_iosIH
#      data:
#        title: "Smart Home Alerts"
#        message: "Abbi Location"
#        data:
#          subtitle: "Abbi has left work"
  action:
    - service: notify.alexa_media
      data:
        data:
          type: announce
        target:
          - media_player.office_2
          - media_player.kitchen
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        message: "Abbi has left work"
 #   - service: notify.ios_iosIH
 #     data:
 #       title: "Smart Home Alerts"
 #       message: "Put Kettle on!"
 #       data:
 #         subtitle: "Abbi home in 5 minutes"
 
    - delay: '00:10:00'
    - service: notify.alexa_media
      data:
        data:
          type: announce
        target:
          - media_player.office_2
          - media_player.kitchen
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        message: "Abbi will be home in five minutes put the kettle on!"
  
# Washer will need adjusting
#
#-
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Washing Machine Start/Finish
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
- alias: 'Washer State - Start'
  trigger:
    - platform: numeric_state
      entity_id: sensor.washer_power
      above: 80
      for:
        seconds: 20
# Make sure washer isn't already running and delaying between cycles - don't re-trigger and cause stopwatch reset
  condition:
    condition: template
    value_template: "{{ states.sensor.washer_state.state != 'Washing' }}"
  action:
    service: mqtt.publish
    data:
      topic: hass/state/washer
      payload: 'Washing'
      retain: 'true'
- alias: 'Washer State - Idle'
  trigger:
    - platform: numeric_state
      entity_id: sensor.washer_power
      below: 5
      for:
        minutes: 5
  action:
    service: mqtt.publish
    data:
      topic: hass/state/washer
      payload: 'Idle'
      retain: 'true'


- alias: 'Washer Finished'
  trigger:
    platform: state
    entity_id: sensor.washer_state
    from: 'Washing'
    to: 'Idle'
  condition:
    condition: time
    after: '09:00:00'
    before: '22:30:00'
  action:
    - service: notify.alexa_media
      data:
        target:
          - media_player.office_2
          - media_player.kitchen
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        data:
          type: announce
        message: "Laundry in the washing machine is done."
   

#
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Dryer Start/Finish
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
- alias: 'Dryer State - Start'
  trigger:
    - platform: numeric_state
      entity_id: sensor.dryer_power
      above: 100
      for:
        seconds: 60
# Make sure dryer isn't already running and delaying between cycles - don't re-trigger and cause stopwatch reset
  condition:
    condition: template
    value_template: "{{ states.sensor.dryer_state.state != 'Drying' }}"
  action:
    service: mqtt.publish
    data:
      topic: hass/state/dryer
      payload: 'Drying'
      retain: 'true'
- alias: 'Dryer State - Idle'
  #
  trigger:
    - platform: numeric_state
      entity_id: sensor.dryer_power
      below: 20
      for:
        minutes: 10
  action:
    service: mqtt.publish
    data:
      topic: hass/state/dryer
      payload: 'Idle'
      retain: 'true'

- alias: 'Dryer Finished'
  trigger:
    platform: state
    entity_id: sensor.dryer_state
    from: 'Drying'
    to: 'Idle'
  condition:
    condition: time
    after: '09:00:00'
    before: '23:00:00'
  
  action:
    - service: notify.alexa_media
      data:
        data:
          type: announce
        target:
          - media_player.office_2
          - media_player.kitchen
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        message: "Tumble dryer has stopped, please check if it has finished or needs emptying"

#
# Shire 3D print finished
#
- alias: '3D print Finished'
  trigger:
    - platform: state
      entity_id: sensor.shire3d_current_state
      from: 'Printing'
      #to: 'Away'
  action:
#    - service: notify.ios_iosIH
#      data:
#        title: "Smart Home Alerts"
#        message: "Shire 3D"
#        data:
#          subtitle: "Print has finished"
#    - service: media_player.volume_set
#      data:
#        entity_id:
#          - media_player.office_speaker
#        volume_level: '0.75'
#    - service: tts.google_say
#      entity_id:
#         - media_player.office_speaker
#      data_template:
#        message: "3D print has finished"

    - service: notify.alexa_media
      data:
        data:
          type: announce
        target:
          - media_player.office_2
          - media_player.kitchen
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        message: "3D printer is finished."
#
### Utility room lights on Utility PIR motion
# 
# turn Utility light tasmota (192.168.10.239) on when motion from 1 hour before sunset or raining
#
- alias: 'Utility Room Front Light on'
  trigger:
    - platform: state
      entity_id: binary_sensor.shenzhen_neo_electronics_co_ltd_battery_powered_pir_sensor_v2_sensor
      from: 'off'
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '09:00:00'
        before: '23:59:00'
      - condition: or
        conditions:
          - condition: sun
            after: 'sunset'
            after_offset: "-01:00:00"
          - condition: state
            entity_id: sensor.dark_sky_precip
            state: 'rain'
          - condition: numeric_state
            entity_id: sensor.downstairplant_light_intensity
            below: 160
  action:
    - service: light.turn_on
      entity_id: group.Utility

#
# turn Utility light tasmota (192.168.10.239) off when no motion for 1 minutes
#
- alias: 'Utility Room Front Light off'
  #
  trigger:
    - platform: state
      entity_id: binary_sensor.shenzhen_neo_electronics_co_ltd_battery_powered_pir_sensor_v2_sensor
      from: 'on'
      to: 'off'
      for:
        minutes: 1
  action:
    - service: light.turn_off
      entity_id: group.Utility
#
### Announce overtemperature in Kitchen and then add notification to phones
#

- alias: 'Kitchen Temperature High'
  #
  trigger:
    - platform: numeric_state
      entity_id: sensor.kitchen_main_temp
      above: 30
      for:
        seconds: 10
    - platform: numeric_state
      entity_id: sensor.orchid_temperature
      above: 30
      for:
        seconds: 10
  action:
    - service: notify.alexa_media
      data:
        target:
          - media_player.office_2
          - media_player.kitchen
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        data:
          type: announce
        message: "Kitchen temperature is HIGH. please check."
#
### Announce overtemperature in Utility and then add notification to phones
#
- alias: 'Utility Temperature High'
  #
  trigger:
    - platform: numeric_state
      entity_id: sensor.utility_temp
      above: 30
      for:
        seconds: 10
  action:
    - service: notify.alexa_media
      data:
        target:
          - media_player.office_2
          - media_player.kitchen
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        data:
          type: announce
        message: "Utility Room temperature is HIGH. please check."    
#
### Announce overtemperature in Office and then add notification to phones
#
- alias: 'Office Temperature High'
  #
  trigger:
    - platform: numeric_state
      entity_id: sensor.officetemp
      above: 30
      for:
        seconds: 10
    - platform: numeric_state
      entity_id: sensor.lime_temperature
      above: 30
      for:
        seconds: 10
  action:
    - service: notify.alexa_media
      data:
        target:
          - media_player.office_2
          - media_player.kitchen
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        data:
          type: announce
        message: "Office temperature is HIGH. please check."
#
### Announce overtemperature in Living room (TRV and sonoff sensor)
#
- alias: 'Living room Front Temperature High'
  trigger:
    - platform: numeric_state
      entity_id: sensor.loungetemp
      above: 30
      for:
        seconds: 10
    - platform: numeric_state
      entity_id: sensor.downstairs_temp
      above: 30
      for:
        seconds: 10
  action:
    - service: notify.alexa_media
      data:
        target:
          - media_player.office_2
          - media_player.kitchen
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        data:
          type: announce
        message: "Living Room temperature is HIGH. please check."   #
#
### Bedroom Over temperature
#
- alias: 'Bedroom (TRV) Temperature High'
  #
  trigger:
    - platform: numeric_state
      entity_id: sensor.bedroom_temp
      above: 30
      for:
        seconds: 10
    - platform: numeric_state
      entity_id: sensor.bedroomtemp
      above: 30
      for:
        seconds: 10
  action:
    - service: notify.alexa_media
      data:
        target:
          - media_player.office_2
          - media_player.kitchen
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        data:
          type: announce
        message: "Bedroom Room temperature is HIGH. please check."    
#
### Announce overtemperature in Barney's room and then add notification to phones
#
- alias: 'Barney Temperature High'
  #
  trigger:
    - platform: numeric_state
      entity_id: sensor.barneytemp
      above: 30
      for:
        seconds: 10
  action:
    - service: notify.alexa_media
      data:
        target:
          - media_player.office_2
          - media_player.kitchen
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        data:
          type: announce
        message: "Barney Room temperature is HIGH. please check."    
#
### Announce overtemperature in Hall and then add notification to phones
#
- alias: 'Hall Temperature High'
  #
  trigger:
    - platform: numeric_state
      entity_id: sensor.halltemp
      above: 30
      for:
        seconds: 10
  action:
    - service: notify.alexa_media
      data:
        target:
          - media_player.office_2
          - media_player.kitchen
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        data:
          type: announce
        message: "Hall temperature is HIGH. please check." 
        
#
# Freezer alarm
#
- alias: 'Freezer Open for more than 5 minute'
  #
  trigger:
    - platform: state
      entity_id: binary_sensor.shenzhen_neo_electronics_co_ltd_door_window_detector_sensor
      from: 'off'
      to: 'on'
      for:
        minutes: 5
  condition:
    - condition: time
      after: '09:00:00'
      before: '23:59:00'
  action:
    - service: notify.alexa_media
      data:
        target:
          - media_player.office_2
          - media_player.kitchen
          - media_player.barney
          - media_player.garage
          - media_player.downstairs
          - media_player.bedroom
        data:
          type: announce
        message: "Freezer is open, please check."
#
#
### Office light triggered by Hive motion sensor off
#
- alias: 'Office Light off'
  #
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_1
      from: 'on'
      to: 'off'
      for:
        minutes: 5
  action:
    - service: light.turn_off
      entity_id: light.office
# Office light triggered by Hive motion sensor on -ADD LUX
- alias: 'Office Light on motion if PIR trigger 1 hr before sunset or raining, not active at night'
  #
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_1
      from: 'off'
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '09:00:00'
        before: '23:59:00'
      - condition: or
        conditions:
          - condition: sun
            after: 'sunset'
            after_offset: "-01:00:00"
          - condition: state
            entity_id: sensor.dark_sky_precip
            state: 'rain'
          - condition: numeric_state
            entity_id: sensor.downstairplant_light_intensity
            below: 100
  action:
    - service: light.turn_on
      entity_id: light.office
#
#
#
#live sensor
#
- alias: "Alexa Report"
  trigger:
  - platform: state
    entity_id: light.alexa_virtual
    to: 'on'
  action:
    - service: alexa_media.update_last_called  #this will force update the last Alexa attribute used by the sensor
    - delay: 00:00:01  # you may need to increase this value if you dont get the response on the echo you asked the question
    - service: notify.alexa_media
      data_template:
        target: 
          - '{{ states.sensor.last_alexa.state }}' 
        data:
          type: tts
        #message: 'it is {{ states("sensor.dark_sky_temperature") }} degrees. Abbi is at {{ states("sensor.geocoded_location") }} and if you glance to the right you can see her fabulous boobs'
        message: >-
          {% if (states.light.alexa_virtual.attributes.brightness | int / 255 * 100 ) | round  == 1  %}
            Abbi is at {{ states('sensor.geocoded_location') }} 
          {% elif (states.light.alexa_virtual.attributes.brightness | int / 255 * 100 ) | round  == 2 %}
             The radiator temperatures are  {{ states('sensor.loungetemp') }} downstairs, {{ states('sensor.officetemp') }} in the office, {{ states('sensor.bedroomtemp') }} in the bedroom and {{ states('sensor.barneytemp') }} in Barney's room
          {% elif (states.light.alexa_virtual.attributes.brightness | int / 255 * 100 ) | round  == 3 %}
            The next bus to Newcastle is the {{ states('sensor.next_bus_route') }} due in {{ states('sensor.next_bus_to_newcastle') }} minutes and currently estimated to arrive at {{ states('sensor.next_bus_estimated') }}
          {% elif (states.light.alexa_virtual.attributes.brightness | int / 255 * 100 ) | round  == 4 %}
            Abbi, currently your journey to work will take {{ states('sensor.abbi_to_work') }} minutes
          {% elif (states.light.alexa_virtual.attributes.brightness | int / 255 * 100 ) | round  == 5 %}
            Iain you have enough fuel to drive {{ states('sensor.milesleft') }} miles
          {% elif (states.light.alexa_virtual.attributes.brightness | int / 255 * 100 ) | round  == 6 %}
            Words.  What you want to say {{ states('sensor.name_of_sensor') }} follow on informtion
          {% elif (states.light.alexa_virtual.attributes.brightness | int / 255 * 100 ) | round  == 7 %}
            Words.  What you want to say {{ states('sensor.name_of_sensor') }} follow on informtionabbi
          {% elif (states.light.alexa_virtual.attributes.brightness | int / 255 * 100 ) | round  == 9 %}
            Words.  What you want to say {{ states('sensor.name_of_sensor') }} follow on informtion
          {% elif (states.light.alexa_virtual.attributes.brightness | int / 255 * 100 ) | round  == 10 %}
            Words.  What you want to say {{ states('sensor.name_of_sensor') }} follow on informtion
          {% else %}
           {{ states('light.alexa_virtual.attributes.brightness') }}
          {% endif %}
    - service: light.turn_off
      entity_id: light.alexa_virtual
